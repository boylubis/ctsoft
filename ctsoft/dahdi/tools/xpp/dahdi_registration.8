.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.07)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "DAHDI_REGISTRATION 8"
.TH DAHDI_REGISTRATION 8 "2011-07-10" "perl v5.10.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
dahdi_registration \- Handle registration of Xorcom XPD modules in dahdi.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
dahdi_registration [\-s sortorder] [on|off]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Without parameters, show all connected XPDs sorted by physical connector order.
Each one is show to be unregistered (off), or registered to a specific dahdi
span (the span number is shown).
.PP
All registerations/deregisterations are sorted by physical connector string.
.PP
Span registration should generally always succeed. Span unregistration may 
fail if channels from the span are in use by e.g. asterisk. In such a case
you'll also see those channels as '(In use)' in the output of \fIlsdahdi\fR\|(8).
.SS "Parameters"
.IX Subsection "Parameters"
off \*(-- deregisters all \s-1XPD\s0's from dahdi.
.PP
on \*(-- registers all \s-1XPD\s0's to dahdi.
.SS "Options"
.IX Subsection "Options"
.IP "\-s \fIsort_order\fR" 4
.IX Item "-s sort_order"
The sort order to use.
.PP
If the option is not used, the sort order is taken from the environment 
variable \s-1XBUS_SORT\s0 and failing that: the hard-coded default of 
\&\s-1SORT_XPPORDER\s0.
.PP
The available sorting orders are documented in Dahdi::Xpp manual.
.SS "Sample Output"
.IX Subsection "Sample Output"
An example of the output of dahdi_registration for some registered
Astribanks:
.PP
.Vb 10
\&  $ dahdi_registration \-s type
\&  XBUS\-01         usb:0000153     usb\-0000:00:10.4\-2
\&          XBUS\-01/XPD\-00: on Span 1
\&          XBUS\-01/XPD\-01: on Span 2
\&  XBUS\-00         usb:0000157     usb\-0000:00:10.4\-4
\&          XBUS\-00/XPD\-00: on Span 3
\&          XBUS\-00/XPD\-01: on Span 4
\&          XBUS\-00/XPD\-02: on Span 5
\&          XBUS\-00/XPD\-03: on Span 6
\&          XBUS\-00/XPD\-04: on Span 7
\&          XBUS\-00/XPD\-05: on Span 8
\&          XBUS\-00/XPD\-06: on Span 9
\&          XBUS\-00/XPD\-07: on Span 10
\&  XBUS\-02                 usb\-0000:00:10.4\-1
\&          XBUS\-02/XPD\-00: on Span 11
\&          XBUS\-02/XPD\-10: on Span 12
\&  # Sorted: type
.Ve
.SH "FILES"
.IX Header "FILES"
.IP "/proc/xpp/XBUS\-nn/XPD\-mm/dahdi_registration" 4
.IX Item "/proc/xpp/XBUS-nn/XPD-mm/dahdi_registration"
Reading from this file shows if if the if the specific \s-1XPD\s0 is
registered. Writing to it 0 or 1 registers / unregisters the device.
.Sp
This should allow you to register / unregister a specific \s-1XPD\s0 rather
than all of them.
